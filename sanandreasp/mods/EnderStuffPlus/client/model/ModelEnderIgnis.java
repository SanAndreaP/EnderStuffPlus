// Date: 11.01.2012 19:41:59
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package sanandreasp.mods.EnderStuffPlus.client.model;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.src.*;
import net.minecraft.util.MathHelper;

public class ModelEnderIgnis extends ModelBase {
	// fields
	public ModelRenderer bipedHeadwear;
	public ModelRenderer bipedBody;
	public ModelRenderer bipedRightArm;
	public ModelRenderer bipedLeftArm;
	public ModelRenderer Shape1;
	public ModelRenderer Shape2;
	public ModelRenderer Shape3;
	public ModelRenderer bipedHead;
	public boolean isAttacking;
	public int heldItemRight;

	public ModelEnderIgnis() {
		this.textureWidth = 64;
		this.textureHeight = 32;
		this.isAttacking = false;
		this.heldItemRight = 0;

		this.bipedHeadwear = new ModelRenderer(this, 0, 16);
		this.bipedHeadwear.addBox(-4F, -8F, -4F, 8, 8, 8);
		this.bipedHeadwear.setRotationPoint(0F, -14F, 0F);
		this.bipedHeadwear.setTextureSize(64, 32);
		this.bipedHeadwear.mirror = true;
		this.setRotation(this.bipedHeadwear, 0F, 0F, 0F);
		this.bipedBody = new ModelRenderer(this, 32, 0);
		this.bipedBody.addBox(-4F, 0F, -2F, 8, 28, 4);
		this.bipedBody.setRotationPoint(0F, -14F, 0F);
		this.bipedBody.setTextureSize(64, 32);
		this.bipedBody.mirror = true;
		this.setRotation(this.bipedBody, 0F, 0F, 0F);
		this.bipedRightArm = new ModelRenderer(this, 56, 0);
		this.bipedRightArm.addBox(-1F, -2F, -1F, 2, 20, 2);
		this.bipedRightArm.setRotationPoint(-5F, -12F, 0F);
		this.bipedRightArm.setTextureSize(64, 32);
		this.bipedRightArm.mirror = true;
		this.setRotation(this.bipedRightArm, 0F, 0F, 0.3490659F);
		this.bipedLeftArm = new ModelRenderer(this, 56, 0);
		this.bipedLeftArm.addBox(-1F, -2F, -1F, 2, 20, 2);
		this.bipedLeftArm.setRotationPoint(5F, -12F, 0F);
		this.bipedLeftArm.setTextureSize(64, 32);
		this.bipedLeftArm.mirror = true;
		this.setRotation(this.bipedLeftArm, 0F, 0F, -0.3490659F);
		this.bipedLeftArm.mirror = false;
		this.Shape2 = new ModelRenderer(this, 56, 16);
		this.Shape2.addBox(-3F, 2F, 6F, 2, 8, 2);
		this.Shape2.setRotationPoint(0F, -14F, 0F);
		this.Shape2.setTextureSize(64, 32);
		this.Shape2.mirror = true;
		this.setRotation(this.Shape2, 2.181662F, 0F, 0F);
		this.Shape3 = new ModelRenderer(this, 56, 16);
		this.Shape3.addBox(-1F, 0F, -6F, 2, 5, 2);
		this.Shape3.setRotationPoint(0F, -14F, 0F);
		this.Shape3.setTextureSize(64, 32);
		this.Shape3.mirror = true;
		this.setRotation(this.Shape3, 1.919862F, 0F, 0F);
		this.bipedHead = new ModelRenderer(this, 0, 0);
		this.bipedHead.addBox(-4F, -8F, -4F, 8, 8, 8);
		this.bipedHead.setRotationPoint(0F, -14F, 0F);
		this.bipedHead.setTextureSize(64, 32);
		this.bipedHead.mirror = true;
		this.setRotation(this.bipedHead, 0F, 0F, 0F);
		this.Shape1 = new ModelRenderer(this, 56, 16);
		this.Shape1.addBox(1F, 2F, 6F, 2, 8, 2);
		this.Shape1.setRotationPoint(0F, -14F, 0F);
		this.Shape1.setTextureSize(64, 32);
		this.Shape1.mirror = true;
		this.setRotation(this.Shape1, 2.181662F, 0F, 0F);
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3,
			float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		this.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		this.bipedHeadwear.render(f5);
		this.bipedBody.render(f5);
		this.bipedRightArm.render(f5);
		this.bipedLeftArm.render(f5);
		this.Shape2.render(f5);
		this.Shape3.render(f5);
		this.bipedHead.render(f5);
		this.Shape1.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	private void setLivingAnimation(float f, float f1, float f2, float f3,
			float f4, float f5) {

		this.bipedHead.rotateAngleY = f3 / 57.29578F;
		this.bipedHead.rotateAngleX = f4 / 57.29578F;
		this.bipedHeadwear.rotateAngleY = this.bipedHead.rotateAngleY;
		this.bipedHeadwear.rotateAngleX = this.bipedHead.rotateAngleX;
		this.Shape1.rotateAngleY = this.Shape2.rotateAngleY = this.bipedHead.rotateAngleY;
		this.Shape1.rotateAngleX = this.Shape2.rotateAngleX = 2.181662F + this.bipedHead.rotateAngleX;

		this.bipedRightArm.rotateAngleX = MathHelper.cos(f * 0.6662F + 3.141593F)
				* 2.0F * f1 * 0.5F;
		this.bipedLeftArm.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1
				* 0.5F;
		this.bipedRightArm.rotateAngleZ = 0.3490659F;
		this.bipedLeftArm.rotateAngleZ = -0.3490659F;

		if( this.isRiding ) {
			this.bipedRightArm.rotateAngleX += -0.6283185F;
			this.bipedLeftArm.rotateAngleX += -0.6283185F;
		}

		if( this.heldItemRight != 0 ) {
			this.bipedRightArm.rotateAngleX = this.bipedRightArm.rotateAngleX * 0.5F
					- 0.3141593F * this.heldItemRight;
		}
		this.bipedRightArm.rotateAngleY = 0.0F;
		this.bipedLeftArm.rotateAngleY = 0.0F;

		if( this.onGround > -9990F ) {
			float f6 = this.onGround;
			this.bipedBody.rotateAngleY = MathHelper
					.sin(MathHelper.sqrt_float(f6) * 3.141593F * 2.0F) * 0.2F;

			this.bipedRightArm.rotationPointZ = 0.3490659F + MathHelper
					.sin(this.bipedBody.rotateAngleY) * 5F;
			this.bipedRightArm.rotationPointX = -MathHelper
					.cos(this.bipedBody.rotateAngleY) * 5F;
			this.bipedLeftArm.rotationPointZ = -0.3490659F
					- MathHelper.sin(this.bipedBody.rotateAngleY) * 5F;
			this.bipedLeftArm.rotationPointX = MathHelper
					.cos(this.bipedBody.rotateAngleY) * 5F;
			this.bipedRightArm.rotateAngleY += this.bipedBody.rotateAngleY;
			this.bipedLeftArm.rotateAngleY += this.bipedBody.rotateAngleY;
			this.bipedLeftArm.rotateAngleX += this.bipedBody.rotateAngleY;

			f6 = 1.0F - this.onGround;
			f6 *= f6;
			f6 *= f6;
			f6 = 1.0F - f6;

			float f8 = MathHelper.sin(f6 * 3.141593F);
			float f10 = MathHelper.sin(this.onGround * 3.141593F)
					* -(this.bipedHead.rotateAngleX - 0.7F) * 0.75F;

			this.bipedRightArm.rotateAngleX -= f8 * 1.2D + f10;
			this.bipedRightArm.rotateAngleY += this.bipedBody.rotateAngleY * 2.0F;
			this.bipedRightArm.rotateAngleZ = 0.3490659F
					+ MathHelper.sin(this.onGround * 3.141593F) * -0.4F;
		}
		this.bipedBody.rotateAngleX = 0.0F;
		this.bipedHead.rotationPointY = 0.0F;
		this.bipedRightArm.rotateAngleZ += MathHelper.cos(f2 * 0.09F) * 0.05F + 0.05F;
		this.bipedLeftArm.rotateAngleZ -= MathHelper.cos(f2 * 0.09F) * 0.05F + 0.05F;
		this.bipedRightArm.rotateAngleX += MathHelper.sin(f2 * 0.067F) * 0.05F;
		this.bipedLeftArm.rotateAngleX -= MathHelper.sin(f2 * 0.067F) * 0.05F;
	}

	private void setFrozenAnimation(float f, float f1, float f2, float f3,
			float f4, float f5) {
		this.setRotation(this.bipedHeadwear, 0F, 0F, 0F);
		this.setRotation(this.bipedBody, 0F, 0F, 0F);
		this.setRotation(this.bipedRightArm, 0F, 0F, 0.3490659F);
		this.setRotation(this.bipedLeftArm, 0F, 0F, -0.3490659F);
		this.setRotation(this.Shape2, 2.181662F, 0F, 0F);
		this.setRotation(this.Shape3, 1.919862F, 0F, 0F);
		this.setRotation(this.bipedHead, 0F, 0F, 0F);
		this.setRotation(this.Shape1, 2.181662F, 0F, 0F);
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3,
			float f4, float f5, Entity e) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
		this.setLivingAnimation(f, f1, f2, f3, f4, f5);

		float f6 = -14F;

		float f7 = 0.4F;

		this.bipedHead.rotationPointZ = -0F;
		this.bipedHead.rotationPointY = f6;
		this.Shape1.rotationPointZ = this.Shape2.rotationPointZ = -0F;
		this.Shape1.rotationPointY = this.Shape2.rotationPointY = f6;
		this.bipedHeadwear.rotationPointX = this.bipedHead.rotationPointX;
		this.bipedHeadwear.rotationPointY = this.bipedHead.rotationPointY;
		this.bipedHeadwear.rotationPointZ = this.bipedHead.rotationPointZ;
		this.bipedHeadwear.rotateAngleX = this.bipedHead.rotateAngleX;
		this.bipedHeadwear.rotateAngleY = this.bipedHead.rotateAngleY;
		this.bipedHeadwear.rotateAngleZ = this.bipedHead.rotateAngleZ;

		if( this.isAttacking ) {
			float f8 = 1.0F;
			this.bipedHead.rotationPointY -= f8 * 5F;
			this.Shape2.rotationPointY -= f8 * 5F;
			this.Shape1.rotationPointY -= f8 * 5F;
		}
	}
}
